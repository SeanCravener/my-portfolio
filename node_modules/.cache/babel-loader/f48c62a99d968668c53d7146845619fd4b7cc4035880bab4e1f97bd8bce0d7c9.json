{"ast":null,"code":"var _jsxFileName = \"/Users/Kiki/Desktop/Sean Mac/Github/my-portfolio/src/components/Window.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { WindowContext } from \"../context/WindowContext\";\nimport { Modal, List } from \"@react95/core\";\nimport Explorer from \"./Explorer\";\nimport IframeViewer from \"./IframeViewer\";\nimport Notepad from \"./Notepad\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Window({\n  selectedWindow\n}) {\n  _s();\n  const {\n    closeWindow\n  } = useContext(WindowContext);\n  const mobile = window.innerWidth < 600;\n  const handleCloseWindow = () => {\n    closeWindow(selectedWindow);\n  };\n  const typeSelector = () => {\n    switch (selectedWindow.type) {\n      case \"folder-explorer\":\n        return /*#__PURE__*/_jsxDEV(Explorer, {\n          content: selectedWindow.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n      case \"iframe-viewer\":\n        return /*#__PURE__*/_jsxDEV(IframeViewer, {\n          content: selectedWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n      case \"notepad\":\n        console.log(selectedWindow.content);\n        return /*#__PURE__*/_jsxDEV(Notepad, {\n          content: selectedWindow.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n      default:\n        return console.log(\"Error: Window type not found.\");\n    }\n  };\n  const populateMenu = menu => {\n    return [{\n      name: \"Links\",\n      list: /*#__PURE__*/_jsxDEV(List, {\n        children: menu.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.link,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: selectedWindow.title,\n    closeModal: handleCloseWindow,\n    menu: selectedWindow.menu && populateMenu(selectedWindow.menu),\n    style: {\n      left: mobile ? \"0%\" : \"20%\",\n      top: mobile ? \"0%\" : \"5%\",\n      maxWidth: \"100vw\",\n      maxHeight: \"100vh\"\n    },\n    buttons: [{\n      value: \"Close\",\n      onClick: handleCloseWindow\n    }],\n    children: typeSelector()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Window, \"QJDPwmDcZlYS+IJ9PBlqzcJr/08=\");\n_c = Window;\nvar _c;\n$RefreshReg$(_c, \"Window\");","map":{"version":3,"names":["useContext","WindowContext","Modal","List","Explorer","IframeViewer","Notepad","jsxDEV","_jsxDEV","Window","selectedWindow","_s","closeWindow","mobile","window","innerWidth","handleCloseWindow","typeSelector","type","content","fileName","_jsxFileName","lineNumber","columnNumber","console","log","populateMenu","menu","name","list","children","map","item","index","Item","href","link","target","rel","title","closeModal","style","left","top","maxWidth","maxHeight","buttons","value","onClick","_c","$RefreshReg$"],"sources":["/Users/Kiki/Desktop/Sean Mac/Github/my-portfolio/src/components/Window.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { WindowContext } from \"../context/WindowContext\";\nimport { Modal, List } from \"@react95/core\";\nimport Explorer from \"./Explorer\";\nimport IframeViewer from \"./IframeViewer\";\nimport Notepad from \"./Notepad\";\n\nexport default function Window({ selectedWindow }) {\n  const { closeWindow } = useContext(WindowContext);\n\n  const mobile = window.innerWidth < 600;\n\n  const handleCloseWindow = () => {\n    closeWindow(selectedWindow);\n  };\n\n  const typeSelector = () => {\n    switch (selectedWindow.type) {\n      case \"folder-explorer\":\n        return <Explorer content={selectedWindow.content} />;\n      case \"iframe-viewer\":\n        return <IframeViewer content={selectedWindow} />;\n      case \"notepad\":\n        console.log(selectedWindow.content);\n        return <Notepad content={selectedWindow.content} />;\n      default:\n        return console.log(\"Error: Window type not found.\");\n    }\n  };\n\n  const populateMenu = (menu) => {\n    return [\n      {\n        name: \"Links\",\n        list: (\n          <List>\n            {menu.map((item, index) => {\n              return (\n                <List.Item key={index}>\n                  <a href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                    {item.name}\n                  </a>\n                </List.Item>\n              );\n            })}\n          </List>\n        ),\n      },\n    ];\n  };\n\n  return (\n    <Modal\n      title={selectedWindow.title}\n      closeModal={handleCloseWindow}\n      menu={selectedWindow.menu && populateMenu(selectedWindow.menu)}\n      style={{\n        left: mobile ? \"0%\" : \"20%\",\n        top: mobile ? \"0%\" : \"5%\",\n        maxWidth: \"100vw\",\n        maxHeight: \"100vh\",\n      }}\n      buttons={[{ value: \"Close\", onClick: handleCloseWindow }]}\n    >\n      {typeSelector()}\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}