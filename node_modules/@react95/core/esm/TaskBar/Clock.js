function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import React, { useEffect, useState } from 'react';
import styled from '@xstyled/styled-components';
import Frame from '../Frame';
import Tooltip from '../Tooltip';
var StyledTooltip = styled(Tooltip).withConfig({
  displayName: "Clock__StyledTooltip",
  componentId: "sc-1tq15w4-0"
})(["\n  div:first-child {\n    right: 0;\n  }\n"]);
var Clock = function Clock() {
  var _useState = useState(''),
    _useState2 = _slicedToArray(_useState, 2),
    timer = _useState2[0],
    setTimer = _useState2[1];
  useEffect(function () {
    function checkTime(i) {
      return i < 10 ? "0".concat(i) : i;
    }
    var interval = setInterval(function () {
      var today = new Date();
      var h = today.getHours();
      var m = today.getMinutes();
      setTimer("".concat(checkTime(h), ":").concat(checkTime(m)));
    });
    return function () {
      return clearInterval(interval);
    };
  }, []);
  return /*#__PURE__*/React.createElement(Frame, {
    boxShadow: "in",
    bg: "transparent",
    px: 6,
    py: 2,
    style: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement(StyledTooltip, null, timer));
};
export default Clock;